# Generated by Django 3.0.3 on 2020-02-20 09:51

import Account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpertApply',
            fields=[
                ('applicant_id', models.UUIDField(default=uuid.uuid4, help_text="Expert Applicant's Unique ID", primary_key=True, serialize=False, unique=True, verbose_name="Expert's ID")),
                ('applicant_full_name', models.CharField(help_text="Applicant's Full Name", max_length=100, verbose_name="Applicant's Fullname")),
                ('applicant_gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], default='male', max_length=20, verbose_name="Applicant's Gender")),
                ('applicant_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=50, verbose_name='Status of the Application')),
                ('applicant_email', models.EmailField(help_text="Applicant's Digital Point Of Contact", max_length=254, unique=True, verbose_name="Applicant's Email")),
                ('applicant_verified_email', models.BooleanField(default=False, verbose_name="Applicant's Email Verified")),
                ('applicant_phone', models.CharField(max_length=10, unique=True, validators=[Account.models.validate_phone_number], verbose_name="Applicant's Phone Number")),
                ('applicant_verified_phone', models.BooleanField(default=False, verbose_name="Applicant's Phone Verified")),
                ('applicant_plot_no', models.CharField(blank=True, default='', help_text="Applicant's Plot No", max_length=50, verbose_name='Plot No')),
                ('applicant_street', models.CharField(help_text="Applicant's Street", max_length=150, verbose_name='Steet')),
                ('applicant_landmark', models.CharField(blank=True, help_text="Applicant's Landmark", max_length=100, null=True, verbose_name='Landmark')),
                ('applicant_place', models.CharField(help_text="Applicant's Palces", max_length=70, verbose_name='Places')),
                ('applicant_city', models.CharField(help_text="Applicant's City", max_length=60, verbose_name='City')),
                ('applicant_state', models.CharField(help_text="Applicant's State", max_length=70, verbose_name='State')),
                ('applicant_country', models.CharField(help_text="Applicant's Counrty", max_length=50, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'ExpertApply',
                'verbose_name_plural': 'ExpertApplys',
            },
        ),
        migrations.CreateModel(
            name='OTPTokenPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=10, validators=[Account.models.validate_phone_number], verbose_name='Phone Number')),
                ('token', models.CharField(blank=True, max_length=4, verbose_name='Token')),
                ('purpose', models.CharField(choices=[('vermob', 'Verification Mobile'), ('forpas', 'Forgot Password'), ('indent', 'Identify The Account')], default='ver', max_length=50, verbose_name='Purpose')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('change_request', models.BooleanField(default=True, verbose_name='Regenerate Token')),
                ('token_used', models.BooleanField(default=False, verbose_name='Token Used')),
                ('token_update', models.BooleanField(default=False, verbose_name='Token Update')),
            ],
            options={
                'verbose_name': 'OTPToken',
                'verbose_name_plural': 'OTPTokens',
                'unique_together': {('phone_number', 'purpose')},
            },
        ),
        migrations.CreateModel(
            name='Others',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_full_name', models.CharField(help_text="Expert's Full Name", max_length=100, verbose_name="Other's Fullname")),
                ('other_gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], default='male', max_length=20, verbose_name="Other's Gender")),
                ('other_email', models.EmailField(blank=True, help_text="Other's Digital Point Of Contact", max_length=254, null=True, verbose_name="Other's Email")),
                ('other_verified_email', models.BooleanField(default=False, verbose_name="Other's Email Verified")),
                ('other_phone', models.CharField(max_length=10, unique=True, validators=[Account.models.validate_phone_number], verbose_name="Other's Phone Number")),
                ('other_verified_phone', models.BooleanField(default=False, verbose_name="Other's Phone Verified")),
                ('other_post', models.TextField(verbose_name='Post Or Designation')),
                ('other_address', models.TextField(verbose_name="Other's Address")),
                ('other_dp', models.ImageField(upload_to=Account.models.other_dp_upload, verbose_name="Other's DP")),
                ('other_user_auth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_account', to=settings.AUTH_USER_MODEL, verbose_name="Other's Authentication Account")),
            ],
            options={
                'verbose_name': 'Others',
                'verbose_name_plural': 'Otherss',
            },
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('farmer_id', models.UUIDField(default=uuid.uuid4, help_text="Farmer's Unique ID", primary_key=True, serialize=False, unique=True, verbose_name="Farmer's ID")),
                ('farmer_full_name', models.CharField(help_text="Farmer's Full Name", max_length=100, verbose_name="Farmer's Fullname")),
                ('farmer_gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], default='male', max_length=20, verbose_name="Farmer's Gender")),
                ('farmer_email', models.EmailField(blank=True, help_text="Farmer's Digital Point Of Contact", max_length=254, null=True, verbose_name="Farmer's Email")),
                ('farmer_verified_email', models.BooleanField(default=False, verbose_name="Farmer's Email Verified")),
                ('farmer_phone', models.CharField(max_length=10, unique=True, validators=[Account.models.validate_phone_number], verbose_name="Farmer's Phone Number")),
                ('farmer_verified_phone', models.BooleanField(default=False, verbose_name="Farmer's Phone Verified")),
                ('farmer_doj', models.DateTimeField(auto_now_add=True, help_text='When did the farmer Created The Account', verbose_name='D.O.J')),
                ('farmer_dp', models.ImageField(default='dp/default.jpg', upload_to=Account.models.farmer_dp_upload, verbose_name="Farmer's Profile Pic")),
                ('farmer_plot_no', models.CharField(blank=True, default='', help_text="Farmer's Plot No", max_length=50, verbose_name='Plot No')),
                ('farmer_street', models.CharField(help_text="Farmer's Street", max_length=150, verbose_name='Steet')),
                ('farmer_landmark', models.CharField(blank=True, help_text="Farmer's Landmark", max_length=100, null=True, verbose_name='Landmark')),
                ('farmer_place', models.CharField(help_text="Farmer's Palces", max_length=70, verbose_name='Places')),
                ('farmer_city', models.CharField(help_text="Farmer's City", max_length=60, verbose_name='City')),
                ('farmer_state', models.CharField(help_text="Farmer's State", max_length=70, verbose_name='State')),
                ('farmer_country', models.CharField(help_text="Farmer's Counrty", max_length=50, verbose_name='Country')),
                ('farmer_user_auth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_account', to=settings.AUTH_USER_MODEL, verbose_name="Famer's Authentication Account")),
            ],
            options={
                'verbose_name': 'Farmer',
                'verbose_name_plural': 'Farmers',
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('expert_id', models.UUIDField(default=uuid.uuid4, help_text="Expert's Unique ID", primary_key=True, serialize=False, unique=True, verbose_name="Expert's ID")),
                ('expert_full_name', models.CharField(help_text="Expert's Full Name", max_length=100, verbose_name="Expert's Fullname")),
                ('expert_gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], default='male', max_length=20, verbose_name="Expert's Gender")),
                ('expert_email', models.EmailField(help_text="Expert's Digital Point Of Contact", max_length=254, unique=True, verbose_name="Expert's Email")),
                ('expert_verified_email', models.BooleanField(default=False, verbose_name="Expert's Email Verified")),
                ('expert_phone', models.CharField(max_length=10, unique=True, validators=[Account.models.validate_phone_number], verbose_name="Expert's Phone Number")),
                ('expert_verified_phone', models.BooleanField(default=False, verbose_name="Expert's Phone Verified")),
                ('expert_plot_no', models.CharField(blank=True, default='', help_text="Expert's Plot No", max_length=50, verbose_name='Plot No')),
                ('expert_street', models.CharField(help_text="Expert's Street", max_length=150, verbose_name='Steet')),
                ('expert_landmark', models.CharField(blank=True, help_text="Expert's Landmark", max_length=100, null=True, verbose_name='Landmark')),
                ('expert_place', models.CharField(help_text="Expert's Palces", max_length=70, verbose_name='Places')),
                ('expert_city', models.CharField(help_text="Expert's City", max_length=60, verbose_name='City')),
                ('expert_state', models.CharField(help_text="Expert's State", max_length=70, verbose_name='State')),
                ('expert_country', models.CharField(help_text="Expert's Counrty", max_length=50, verbose_name='Country')),
                ('expert_dp', models.ImageField(default='dp/default.jpg', upload_to=Account.models.expert_dp_upload, verbose_name="Expert's Profile Pic")),
                ('expert_doj', models.DateTimeField(auto_now_add=True, verbose_name="Expert's D.O.J.")),
                ('expert_user_auth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_account', to=settings.AUTH_USER_MODEL, verbose_name="Famer's Authentication Account")),
            ],
            options={
                'verbose_name': 'Expert',
                'verbose_name_plural': 'Experts',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=Account.models.document_upload, verbose_name='File Upload')),
                ('linked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_account_doc', to='Account.ExpertApply', verbose_name='')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
    ]
